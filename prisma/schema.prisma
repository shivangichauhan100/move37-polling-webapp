generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(cuid())
  name         String
  email        String    @unique
  passwordHash String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  polls        Poll[]
  votes        Vote[]

  @@map("users")
}

model Poll {
  id           String      @id @default(cuid())
  question     String
  isPublished  Boolean     @default(false)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  creatorId    String
  creator      User        @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  options      PollOption[]
  votes        Vote[]

  @@map("polls")
}

model PollOption {
  id        String   @id @default(cuid())
  text      String
  pollId    String
  poll      Poll     @relation(fields: [pollId], references: [id], onDelete: Cascade)
  votes     Vote[]

  @@map("poll_options")
}

model Vote {
  id           String      @id @default(cuid())
  userId       String
  user         User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  pollId       String
  poll         Poll        @relation(fields: [pollId], references: [id], onDelete: Cascade)
  pollOptionId String
  pollOption   PollOption  @relation(fields: [pollOptionId], references: [id], onDelete: Cascade)
  createdAt    DateTime    @default(now())

  @@unique([userId, pollId])
  @@map("votes")
}